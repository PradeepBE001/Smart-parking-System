

#include <ESP32Servo.h>  //includes the servo library
#include <Wire.h> // Include the Wire library
#include <LiquidCrystal_I2C.h> // Include the LiquidCrystal_I2C library

#define I2C_ADDRESS 0x3F // I2C address of the LCD module
#define LCD_COLUMNS 16 // Number of columns in the LCD
#define LCD_ROWS 4 // Number of rows in the LCD

LiquidCrystal_I2C lcd(I2C_ADDRESS, LCD_COLUMNS, LCD_ROWS); // Create a new LiquidCrystal_I2C object


bool s1 = false;
bool s2 = false;

String s3="Parking Empty";


Servo myservo;

#define ir_enter 34
#define ir_back 32

#define ir_car1 33
#define ir_car2 25



int S1 = 0, S2 = 0;
int flag1 = 1, flag2 = 1;
int slot = 2;


void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);

  // Initialize the I2C communication
  Wire.begin(21,22);

  // Initialize the LCD screen
  lcd.begin(); // no arguments needed for initialization

  // Turn on the backlight of the LCD screen
  lcd.backlight();

  pinMode(ir_car1, INPUT);
  pinMode(ir_car2, INPUT);

  pinMode(ir_enter, INPUT);
  pinMode(ir_back, INPUT);

  myservo.attach(13);
  myservo.write(90);

  lcd.setCursor(0, 1);
  lcd.print("    Car  parking  ");
  lcd.setCursor(0, 2);
  lcd.print("       System     ");
  delay(2000);
  lcd.clear();

  Read_Sensor();

  int total = S1 + S2;
  slot = slot - total;
}
void loop() {
  

  Read_Sensor();

  lcd.setCursor(0, 0);
  lcd.print("   Have Slot: ");
  lcd.print(slot);
  lcd.print("    ");

  lcd.setCursor(0, 1);
  if (S1 == 1) {
    s1 = true;
    lcd.print("S1:Fill ");
  } else {
    s1 = false;
    lcd.print("S1:Empty");
  }

  lcd.setCursor(10, 1);
  if (S2 == 1) {
    s2 = true;
    lcd.print("S2:Fill ");
  } else {
    s2 = false;
    lcd.print("S2:Empty");
  }

  

if(s1&&s2)
{
  s3="Parking is Full";
}
else {
s3="Parking Empty";
}


  if (digitalRead(ir_enter) == 1 && flag1 == 1) {
    if (slot > 0) {
      flag1 = 0;
      if (flag2 == 1) {
        myservo.write(180);
        slot = slot - 1;
        if(slot<0)
        slot=0;
      }
    } else {
      lcd.setCursor(0, 0);
      lcd.print(" Sorry Parking Full ");
      delay(1000);
    }
  }

  if (digitalRead(ir_back) == 1 && flag2 == 1) {
    flag2 = 0;
    if (flag1 == 1) {
      myservo.write(180);
      slot = slot + 1;
      if(slot>4)
      slot=4;
    }
  }

  if (flag1 == 0 && flag2 == 0) {
    delay(1000);
    myservo.write(90);
    flag1 = 1, flag2 = 1;
  }

  delay(1);
}

void Read_Sensor() {
  S1 = 0, S2 = 0;

  if (digitalRead(ir_car1) == 1) { S1 = 1; }
  if (digitalRead(ir_car2) == 1) { S2 = 1; }
  
}
